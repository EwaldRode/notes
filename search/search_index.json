{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":""},{"location":"#ewalds-cheat-sheet","title":"Ewald's Cheat Sheet","text":"<p>Snippets, cheats and how-to's</p>"},{"location":"Java/Keystore/","title":"Keystore","text":""},{"location":"Java/Keystore/#how-to-list-contents-of-a-keystore-file","title":"how to list contents of a keystore file","text":"<p>Precondition:   working folder is path/to/java_jdk/bin</p> <pre><code>keytool -list -v -keystore [keystore_file.jks] -storepass [keystore password]\n</code></pre>"},{"location":"Java/Keystore/#export-ca-from-keystore-file","title":"export ca from keystore file","text":"<p>Precondition:   working folder is path/to/java_jdk/bin</p> <pre><code>keytool -export -alias [ca_alias] -file [certificate.crt] -keystore [keystore_file.jks] -storepass [keystore password]\n</code></pre>"},{"location":"Java/Keystore/#import-ca-into-keystore-file","title":"import ca into keystore file","text":"<p>Precondition:   working folder is path/to/java_jdk/bin</p> <pre><code>keytool -import -trustcacerts -alias [ca_alias] -file [certificate.crt] -keystore [keystore_file.jks] -storepass [keystore password]\n</code></pre> <p>Default cacerts password: \u201cchangeit\u201d</p>"},{"location":"Java/Maven/","title":"Maven","text":""},{"location":"Java/Maven/#update-the-version-number-of-the-project-and-all-of-its-submodules","title":"Update the version number of the project and all of its submodules","text":"<pre><code>mvn versions:set \n</code></pre>"},{"location":"Java/Maven/#use-non-default-mvn-settings-file","title":"Use non default mvn settings file","text":"<pre><code>mvn [command] --settings=path\\to\\special\\settings.xml\n</code></pre>"},{"location":"Java/Maven/#list-all-declared-and-transitive-dependencies-in-tree-form","title":"List all declared and transitive dependencies in tree form","text":"<pre><code>mvn dependency:tree\n</code></pre>"},{"location":"Manjaro/setup/","title":"Setup","text":""},{"location":"Manjaro/setup/#update-distro","title":"update distro","text":"<pre><code>sudo pacman -Syu\n</code></pre>"},{"location":"Manjaro/setup/#install-base-software","title":"install base software","text":"<pre><code>sudo pacman -S brave-browser\n</code></pre> <p>sudo pacman -Syu jdk17-openjdk  sudo pacman -Syu jdk8-openjdk  sudo pacman -Syu jdk11-openjdk </p> <p>sudo pacman -Syu libreoffice sudo pacman -Syu evolution evolution-ews</p> <p>sudo pacman -Syu keepass</p>"},{"location":"Manjaro/virtualization/","title":"Virtualization","text":""},{"location":"Manjaro/virtualization/#update-distro","title":"update distro","text":"<pre><code>sudo pacman -Syu\n</code></pre>"},{"location":"Manjaro/virtualization/#install-and-setup-libvirt-qemu","title":"install and setup libvirt + qemu","text":"<pre><code>sudo pacman -S --needed  virt-manager qemu-desktop libvirt edk2-ovmf dnsmasq libguestfs-tools libguestfs\n</code></pre> <p>sudo systemctl enable libvirtd.service sudo systemctl start libvirtd.service sudo usermod -aG libvirt ${USER} sudo modprobe -r kvm_intel sudo modprobe kvm_intel nested=1 echo \"options kvm-intel nested=1\" | sudo tee /etc/modprobe.d/kvm-intel.conf systool -m kvm_intel -v | grep nested</p> <p>qemu-img convert -o qcow2 metro-vm-disk1.vmdk metro-vm.qcow2 qemu-img convert -O qcow2 metro-vm-disk1.vmdk metro-vm.qcow2</p> <p>qemu-img convert -O qcow2 Windows10Backup-disk1.vmdk Windows10Backup.qcow2 qemu-img convert -f vmdk -O qcow2 Windows10Backup-disk1.vmdk win10.qcow2</p> <p>virt-install --name sit --ram 8192 --cpu host --os-variant win10 --vcpu 8 --disk /home/ewald/vms/win10/win10.qcow2,bus=ide --network bridge=virbr0 --import virt-install --name sit --ram 8192 --cpu host --os-variant win10 --vcpu 8 --disk /home/ewald/vms/win10/win10.qcow2,bus=sata --network bridge=virbr0 --import sudo pacman -S virt-what virt-image virt-top mhwd-kernel -li</p> <p>qemu-img convert -f vmdk -O qcow2 Windows10BackupVirtIO-disk1.vmdk Windows10BackupVirtIO.qcow2 sudo virsh net-start default</p> <p>sudo pacman -Syu spice-vdaagent sudo pacman -Syu spice-vdagent systemctl enable spice-vdagent.service systemctl enable spice-vdagentd.service</p> <p>sudo virsh net-start default xrandr sudo mkdir /mnt/vfs_share cd /mnt/vfs_share sudo chown ewald:ewald /mnt/vfs_share mkdir /mnt/vfs_share/git ln -t /mnt/vfs_share/git sit ln -t /mnt/vfs_share/git ~/sit ln -s ~/sit /mnt/vfs_share/git ln -s /mnt/vfs_share/git ~/dev/sit</p> <p>sudo pacman -S docker sudo pacman -S kubeadm  docker run hello-world docker info sudo usermod -aG kvm $USER sudo pacman -S gnome-terminal systemctl --user start docker-desktop systemctl --user start docker systemctl enable docker sudo systemctl start docker sudo usermod -aG docker (user) sudo usermod -aG docker ewald</p> <p>sudo systemctl daemon-reload sudo systemctl restart default-net-start.service sudo systemctl status default-net-start.service</p>"},{"location":"Powershell/Snippets/","title":"Snippets","text":""},{"location":"Powershell/Snippets/#how-to-generate-a-new-ssh-key","title":"how to generate a new ssh key:","text":""},{"location":"Powershell/Snippets/#how-to-generate-a-new-ssh-key_1","title":"how to generate a new ssh key:","text":"<pre><code>ssh-keygen -t rsa -b 4096 -C \"insert.your@email-adress.here\"\n</code></pre>"},{"location":"Powershell/Snippets/#keystore-file","title":"keystore file","text":""},{"location":"Powershell/Snippets/#how-to-list-contents-of-keystore-file","title":"how to list contents of keystore file","text":"<p>Precondition:   working folder is path/to/java_jdk/bin</p> <pre><code>keytool -list -v -keystore [keystore_file.jks] -storepass [keystore password]\n</code></pre>"},{"location":"Powershell/Snippets/#export-ca-from-keystore-file","title":"export ca from keystore file","text":"<p>Precondition:   working folder is path/to/java_jdk/bin</p> <pre><code>keytool -export -alias [ca_alias] -file [certificate.crt] -keystore [keystore_file.jks] -storepass [keystore password]\n</code></pre>"},{"location":"Powershell/Snippets/#import-ca-into-keystore-file","title":"import ca into keystore file","text":"<p>Precondition:   working folder is path/to/java_jdk/bin</p> <pre><code>keytool -import -trustcacerts -alias [ca_alias] -file [certificate.crt] -keystore [keystore_file.jks] -storepass [keystore password]\n</code></pre>"},{"location":"Powershell/Snippets/#how-to-decode-base64-encoded-strings-with-powershell","title":"how to decode base64 encoded strings with powershell","text":"<p>Condition: base64 encoded string: YmxhaGJsYWg=</p> <pre><code>PS &gt; [System.Text.Encoding]::UTF8.GetString([System.Convert]::FromBase64String(\"YmxhaGJsYWg=\"))\nblahblah\n</code></pre>"},{"location":"git/cheats/","title":"git_cheats","text":"<p>Solutions to common git scenarios</p>"},{"location":"git/cheats/#git-clone-with-non-default-ssh-key","title":"git clone with non-default ssh-key","text":"<pre><code>git -c core.sshCommand=\"ssh -i &lt;path-to-private-key&gt;\" clone &lt;path-to-git-repo&gt;\n</code></pre> <p>E.g.:</p> <pre><code>git -c core.sshCommand=\"ssh -i C:/Users/ewald/.ssh/id_rsa_nexte\" clone git@github.com:EwaldRode/cheats.git\n</code></pre>"},{"location":"git/cheats/#reconfigure-git-to-use-non-default-ssh-key","title":"reconfigure git to use non-default ssh key","text":"<pre><code>git config core.sshCommand 'ssh -i &lt;path-to-private-key&gt;'\n</code></pre> <p>E.g.:</p> <pre><code>git config core.sshCommand 'ssh -i C:/Users/ewald/.ssh/id_rsa_nexte'\n</code></pre>"},{"location":"git/cheats/#rebasing-branch-onto-master","title":"rebasing branch onto master","text":"<p>When not to use: If other people are also working on your branch. </p>"},{"location":"git/cheats/#short","title":"short","text":"<p>Scenario: You are on your local branch and you are the ONLY person working on it. Solution: If you know what you are doing, use this for rebase. </p> <pre><code>git fetch &amp;&amp; git rebase origin/master\n</code></pre>"},{"location":"git/cheats/#long","title":"long","text":"<p>Scenario: You have a local branch and already commited changes. Solution: Step 1: Pull all commits made by other developers working on your branch and rebases your changes on top of it.</p> <pre><code>git checkout LocalBranch\ngit pull --rebase\n</code></pre> <p>Step 2: Resolve conflicts.</p> <p>Step 3: Pull all commits from remote master (and rebases local master on remote master(--rebase is only necessary if you committed onto local master)).</p> <pre><code>git checkout master\ngit pull --rebase\n</code></pre> <p>Step 4: Resolve conflicts.</p> <p>Step 5: Rebase LocalBranch onto master.</p> <pre><code>git checkout LocalBranch\ngit rebase master\n</code></pre> <p>Step 6: Resolve conflicts. </p> <p>Step 7: Pushing changes to remote LocalBranch. --force-with-lease will only overwrite the branch in case there were no other commits published for LocalBranch from other developers while you were rebasing. Do not use --force as this will overwrite changes made by oter developers. In case other developers made changes to LocalBranch. Start again from Step 1.</p> <pre><code>git push --force-with-lease \n</code></pre>"},{"location":"git/cheats/#resolve-rebasemerge-conflicts","title":"resolve rebase/merge conflicts","text":"<p>Add resolved conflicts.</p> <pre><code>git add path/to/filename\n</code></pre>"},{"location":"git/cheats/#rebase","title":"rebase","text":"<p>Continue rebase with:</p> <pre><code>git rebase --continue\n</code></pre> <p>Abort rebase with:</p> <pre><code>git rebase --abort\n</code></pre>"},{"location":"git/cheats/#merge","title":"merge","text":"<p>Continue merge with:</p> <pre><code>git merge --continue\n</code></pre> <p>Abort merge with:</p> <pre><code>git merge --abort\n</code></pre>"},{"location":"git/cheats/#merge-branch-into-master","title":"merge branch into master","text":"<pre><code>git checkout master\ngit merge LocalBranch\n</code></pre> <p>When and Why? Merge your branch into master if done with changes by you and other co-developers. Which makes YourBranch up-to-date with master when you wanted to work on same branch later.</p>"},{"location":"git/cheats/#pull-changes-from-master-into-your-current-local-branch","title":"pull changes from master into your current local branch","text":"<pre><code>git pull origin master\n</code></pre>"},{"location":"git/cheats/#delete-a-git-commit-while-keeping-the-changes-made-to-the-code","title":"delete a git commit while keeping the changes made to the code","text":"<pre><code>git reset HEAD^\n</code></pre> <p>git reset without a --hard or --soft moves your HEAD to point to the specified commit, without changing any files. HEAD^ refers to the (first) parent commit of your current commit, which in your case is the commit before the temporary one.</p>"},{"location":"git/cheats/#amend-a-commit","title":"amend a commit","text":"<pre><code>git commit --amend [-m \u2026 etc]\n</code></pre> <p>This will edit the most recent commit.</p> <p>Note: This can cause problems if you've already pushed the commit to a place where someone else may have pulled it from.</p>"},{"location":"git/cheats/#overwrite-changes-made-to-local-branch","title":"overwrite changes made to local branch","text":"<p>Setting your branch to exactly match the remote branch:</p> <pre><code>git fetch origin\ngit reset --hard origin/master\n</code></pre>"},{"location":"git/cheats/#rename-a-local-branch","title":"Rename a local branch","text":"<p>If you are on the branch you want to rename:</p> <pre><code>git branch -m new-name\n</code></pre>"},{"location":"git/cheats/#change-file-permission","title":"Change file permission","text":"<p>Make a file executable</p> <pre><code>git update-index --chmod=+x /path/to/executable\n</code></pre>"},{"location":"git/cheats/#create-a-patch-for-the-last-commit","title":"Create a patch for the last commit","text":"<pre><code>git format-patch -1 HEAD\n</code></pre>"},{"location":"git/migrations/","title":"Copy whole repository","text":""},{"location":"git/migrations/#add-new-remote","title":"Add new remote","text":"<pre><code>git remote add gitlab git@new_git_adress.git\n</code></pre>"},{"location":"git/migrations/#fetch-all","title":"fetch all","text":"<pre><code>git fetch origin  --all\n</code></pre>"},{"location":"git/migrations/#track-checkout-and-track-all-remote-branches","title":"Track checkout and track all remote branches","text":""},{"location":"git/migrations/#linux","title":"Linux","text":"<p>Optional: Filter for master and Head</p> <pre><code>for remote in $(git branch -r | grep -v master | grep -v HEAD); do git checkout --track $remote ; done\n</code></pre>"},{"location":"git/migrations/#windows","title":"Windows","text":"<p>Substring(2) filters unwanted whitespace. Remove if necessary </p> <pre><code>$remotes=git branch -r\nforEach($remote in $remotes){git checkout --track $remote.Substring(2)}\n</code></pre>"},{"location":"git/migrations/#push-all-commits","title":"push all commits","text":"<pre><code>git push --all gitlab\n</code></pre>"},{"location":"git/migrations/#push-all-tags","title":"push all tags","text":"<pre><code>git push --tags gitlab\n</code></pre>"},{"location":"git/migrations/#remove-old-remote-repository","title":"remove old remote repository","text":"<pre><code>git remote remove origin\n</code></pre>"},{"location":"git/migrations/#rename-new-remote-repository","title":"rename new remote repository","text":"<pre><code>git remote rename gitlab origin\n</code></pre>"},{"location":"shell/File%20Operations/","title":"File operations","text":""},{"location":"shell/File%20Operations/#find-and-delete-empty-directories","title":"find and delete empty directories","text":"<pre><code>find /path/to/folder -type d --empty -delete\n</code></pre>"},{"location":"shell/File%20Operations/#move-and-merge-directories","title":"move and merge directories","text":"<pre><code>rsync -a --remove-source-files /source/directory/ /target/directory/\n</code></pre>"},{"location":"shell/Snippets/","title":"Snippets","text":""},{"location":"shell/Snippets/#execute-command-detach-it-from-console-and-redirect-output-to-nullvoid","title":"execute command, detach it from console, and redirect output to null/void:","text":"<pre><code>nohup command &gt;/dev/null 2&gt;&amp;1 &amp;\n</code></pre>"},{"location":"shell/Snippets/#execute-command-endless-command-and-detach-it","title":"execute command, endless command and detach it","text":"<pre><code>nohup sh -c 'while true; do ./.....; done' &amp;\n</code></pre>"},{"location":"shell/Snippets/#remove-duplicate-lines-from-file","title":"remove duplicate lines from file","text":"<pre><code>awk '!seen[$0]++' /path/to/file\n</code></pre>"},{"location":"shell/Snippets/#generate-a-ssh-key","title":"generate a ssh key","text":"<pre><code>ssh-keygen -b 4096 -t rsa -C first.last@company.com\n</code></pre>"},{"location":"ubuntu/Docker_%26_K8S/","title":"Docker & K8S","text":""},{"location":"ubuntu/Docker_%26_K8S/#docker","title":"docker","text":""},{"location":"ubuntu/Docker_%26_K8S/#install-docker","title":"install docker","text":"<pre><code>apt-get install docker.io -y\nsystemctl start docker\nsystemctl enable docker\n</code></pre>"},{"location":"ubuntu/Docker_%26_K8S/#verify-docker","title":"verify docker","text":"<pre><code>docker --version\ndocker run hello-world\n</code></pre>"},{"location":"ubuntu/Docker_%26_K8S/#fix-docker-permission-errors","title":"fix docker permission errors","text":"<pre><code>sudo groupadd docker\nsudo usermod -aG docker $USER\n</code></pre> <p>--&gt; reboot</p>"},{"location":"ubuntu/Docker_%26_K8S/#minikube","title":"minikube","text":""},{"location":"ubuntu/Docker_%26_K8S/#install-minikube","title":"install minikube","text":"<pre><code>wget https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64\ncp minikube-linux-amd64 /usr/local/bin/minikube\nchmod 755 /usr/local/bin/minikube\n</code></pre>"},{"location":"ubuntu/Docker_%26_K8S/#verify-minikube","title":"verify minikube","text":"<pre><code>minikube version\n</code></pre>"},{"location":"ubuntu/Docker_%26_K8S/#kubectl","title":"kubectl","text":""},{"location":"ubuntu/Docker_%26_K8S/#install-kubectl","title":"install kubectl","text":"<pre><code>curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add -\necho \"deb http://apt.kubernetes.io/ kubernetes-xenial main\" | tee /etc/apt/sources.list.d/kubernetes.list\napt-get update -y\napt-get install kubectl kubeadm -y\n</code></pre>"},{"location":"ubuntu/Docker_%26_K8S/#verify-kubernetes","title":"verify kubernetes","text":"<pre><code>minikube start\nkubectl cluster-info\nkubectl config view\nminikube status\n</code></pre>"},{"location":"ubuntu/Docker_%26_K8S/#kubernetes-dashboard","title":"Kubernetes Dashboard","text":"<pre><code>minikube dashboard --url\n</code></pre>"},{"location":"ubuntu/Docker_%26_K8S/#access-minikube-vm","title":"Access minikube VM","text":"<pre><code>minikube ssh\n</code></pre>"},{"location":"ubuntu/setup_on_windows_host/","title":"Setup ubuntu VM with Windows Host","text":"<p>this repository provides the user with solutions to update a development distro</p>"},{"location":"ubuntu/setup_on_windows_host/#hyper-v","title":"hyper-v","text":"<p>Generation 2 UEFI VM deactivate secure boot Guest Sessions aktivieren increase RAM + CPU Count</p> <p>If needed, execute ./install.sh twice</p> <pre><code>wget https://raw.githubusercontent.com/Microsoft/linux-vm-tools/master/ubuntu/18.04/install.sh\nsudo chmod +x install.sh\nsudo ./install.sh\n</code></pre> <p>Falls Fehler auftreten. /etc/xrdp/xrdp.ini editieren</p> <pre><code>port=vsock://-1:3389\nuse_vsock=false\n</code></pre> <p>Dependency installieren:</p> <pre><code>sudo apt-get install xorgxrdp-hwe-18.04\n</code></pre> <p>VM stoppen und in Powershell(Admin):</p> <pre><code>Set-VM -VMName &lt;your_vm_name&gt;  -EnhancedSessionTransportType HvSocket\n</code></pre>"},{"location":"ubuntu/setup_on_windows_host/#change-ubuntu-vm-resolution","title":"change ubuntu vm resolution","text":"<pre><code>sudo nano /etc/default/grub\n</code></pre> <p>Find GRUB_CMDLINE_LINUX_DEFAULT=\"quiet splash\" Append that line with video=hyperv_fb:[specify resolution, e.g. 1024x768]</p> <pre><code>GRUB_CMDLINE_LINUX_DEFAULT=\"quiet splash video=hyperv_fb:1024x768\"\n</code></pre> <p>Save changes and exit</p> <pre><code>sudo update-grub\n</code></pre> <p>Restart the VM</p>"},{"location":"ubuntu/setup_on_windows_host/#update-distro","title":"update distro","text":"<pre><code>sudo apt-get update -y\nsudo apt-get dist-upgrade -y\nsudo apt-get upgrade -y\nsudo apt autoremove -y\n</code></pre>"},{"location":"ubuntu/setup_on_windows_host/#common-tools","title":"common tools","text":"<pre><code>sudo apt-get install curl wget apt-transport-https -y\n</code></pre>"}]}